@model Habbitica.Models.AdminIndexViewModel 
@{
    Layout = "_AdminLayout";
    ViewData["Active"] = "Index";
    ViewData["Title"] = "Lists | Admin";
}

<body>
<!--Основные таблицы-->
<div class="lime-container">
    <div class="lime-body">
        <div class="container">
            <div class="row">
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Users</h5>
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                    <tr>
                                        <th scope="col">ID</th>
                                        <th scope="col">Email</th>
                                        <th scope="col">Username</th>
                                    </tr>
                                    </thead>
                                    <tbody class="elastic">

                                    @foreach (var item in Model.Users)
                                    {
                                        <tr >
                                            <td>@item.UserId</td>
                                            <td>@item.Email</td>
                                            <td>@item.Username</td>
                                        </tr>
                                    }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card">
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="lime-footer">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <span class="footer-text">2021 © develop</span>
                </div>
            </div>
        </div>
    </div>
</div>

</body>
<script>
  document.addEventListener('DOMContentLoaded', () => {

    const getSort = ({ target }) => {
      const order = (target.dataset.order = -(target.dataset.order || -1));
      const index = [...target.parentNode.cells].indexOf(target);
      const collator = new Intl.Collator(['en', 'ru'], { numeric: true });
      const comparator = (index, order) => (a, b) => order * collator.compare(
        a.children[index].innerHTML,
        b.children[index].innerHTML
      );

      for (const tBody of target.closest('table').tBodies)
        tBody.append(...[...tBody.rows].sort(comparator(index, order)));

      for (const cell of target.parentNode.cells)
        cell.classList.toggle('sorted', cell === target);
    };

    document.querySelectorAll('.table thead').forEach(tableTH => tableTH.addEventListener('click', () => getSort(event)));

  });
</script>

<style>
  .table_sort table {
    border-collapse: collapse;
  }
  .table_sort th {
    cursor: pointer;
  }
  th.sorted[data-order="1"],
  th.sorted[data-order="-1"] {
    position: relative;
  }

    th.sorted[data-order="1"]::after,
    th.sorted[data-order="-1"]::after {
      right: 8px;
      position: absolute;
    }

    th.sorted[data-order="-1"]::after {
      content: "▼"
    }

    th.sorted[data-order="1"]::after {
      content: "▲"
    }
</style>